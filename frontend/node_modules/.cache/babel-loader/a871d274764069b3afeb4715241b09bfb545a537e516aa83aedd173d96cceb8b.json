{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    information: [],\n    group: [],\n    groupInformation: []\n  },\n  getters: {\n    getOptions: state => state.group,\n    getGroupInformation: state => state.groupInformation\n  },\n  mutations: {\n    set_information(state, data) {\n      state.information = data;\n    },\n    addGroupServer(state, newGroup) {\n      state.group.push(newGroup);\n    },\n    group_information(state, ted) {\n      state.groupInformation = ted;\n    }\n  },\n  actions: {\n    classData({\n      commit\n    }) {\n      // Realize a chamada à API JSON Server para buscar as opções\n      fetch('http://localhost:3000/registerGroup') // Substitua pela rota correta do JSON Server\n      .then(response => response.json()).then(data => {\n        commit('set_information', data);\n      });\n    },\n    async addGroupServer({\n      commit\n    }, newGroup) {\n      const response = await fetch('http://localhost:3000/group', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newGroup)\n      });\n      if (!response.ok) {\n        throw new Error('Erro ao adicionar cadastro.');\n      }\n      const data = await response.json();\n      commit('addGroupServer', data);\n    },\n    groupData({\n      commit\n    }) {\n      // Realize a chamada à API JSON Server para buscar as opções\n      fetch('http://localhost:3000/group') // Substitua pela rota correta do JSON Server\n      .then(response => response.json()).then(ted => {\n        commit('group_information', ted);\n      });\n    },\n    //função\n    showLayout(context, component) {\n      switch (component) {\n        case 'componentGroup':\n          context.commit('setComponenteAtual', 'componentGroup');\n          break;\n        case 'componentNewGroup':\n          context.commit('setComponenteAtual', 'componentNewGroup');\n          break;\n        default:\n          console.error('Ação desconhecida');\n      }\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","state","information","group","groupInformation","getters","getOptions","getGroupInformation","mutations","set_information","data","addGroupServer","newGroup","push","group_information","ted","actions","classData","commit","fetch","then","response","json","method","headers","body","JSON","stringify","ok","Error","groupData","showLayout","context","component","console","error","modules"],"sources":["/home/aureamar/Documentos/Projetos/project_lista_chamada/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n    information: [],\n    group: [],\n    groupInformation: [],\n  },\n  getters: {\n    getOptions: (state) => state.group,\n    getGroupInformation: (state) => state.groupInformation,\n  },\n  mutations: {\n\n    set_information(state, data) {\n      state.information = data;\n    },\n\n    addGroupServer(state, newGroup) {\n      state.group.push(newGroup)\n    },\n\n    group_information(state, ted) {\n      state.groupInformation = ted;\n    },\n\n  },\n  actions: {\n    classData({ commit }) {\n      // Realize a chamada à API JSON Server para buscar as opções\n      fetch('http://localhost:3000/registerGroup') // Substitua pela rota correta do JSON Server\n        .then((response) => response.json())\n        .then((data) => {\n          commit('set_information', data)\n        })\n    },\n\n    async addGroupServer({ commit }, newGroup) {\n\n      const response = await fetch('http://localhost:3000/group', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(newGroup),\n      });\n\n      if (!response.ok) {\n        throw new Error('Erro ao adicionar cadastro.');\n      }\n\n      const data = await response.json();\n      commit('addGroupServer', data);\n\n    },\n\n    groupData({ commit }) {\n      // Realize a chamada à API JSON Server para buscar as opções\n      fetch('http://localhost:3000/group') // Substitua pela rota correta do JSON Server\n        .then((response) => response.json())\n        .then((ted) => {\n          commit('group_information', ted)\n        })\n    },\n\n    //função\n    showLayout(context, component) {\n\n      switch (component) {\n        case 'componentGroup':\n          context.commit('setComponenteAtual', 'componentGroup');\n          break;\n        case 'componentNewGroup':\n          context.commit('setComponenteAtual', 'componentNewGroup');\n          break;\n        default:\n          console.error('Ação desconhecida');\n      }\n    }\n  },\n\n  modules: {\n  }\n})\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,WAAW,EAAE,EAAE;IACfC,KAAK,EAAE,EAAE;IACTC,gBAAgB,EAAE;EACpB,CAAC;EACDC,OAAO,EAAE;IACPC,UAAU,EAAGL,KAAK,IAAKA,KAAK,CAACE,KAAK;IAClCI,mBAAmB,EAAGN,KAAK,IAAKA,KAAK,CAACG;EACxC,CAAC;EACDI,SAAS,EAAE;IAETC,eAAeA,CAACR,KAAK,EAAES,IAAI,EAAE;MAC3BT,KAAK,CAACC,WAAW,GAAGQ,IAAI;IAC1B,CAAC;IAEDC,cAAcA,CAACV,KAAK,EAAEW,QAAQ,EAAE;MAC9BX,KAAK,CAACE,KAAK,CAACU,IAAI,CAACD,QAAQ,CAAC;IAC5B,CAAC;IAEDE,iBAAiBA,CAACb,KAAK,EAAEc,GAAG,EAAE;MAC5Bd,KAAK,CAACG,gBAAgB,GAAGW,GAAG;IAC9B;EAEF,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAAC;MAAEC;IAAO,CAAC,EAAE;MACpB;MACAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;MAAA,CAC1CC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEV,IAAI,IAAK;QACdQ,MAAM,CAAC,iBAAiB,EAAER,IAAI,CAAC;MACjC,CAAC,CAAC;IACN,CAAC;IAED,MAAMC,cAAcA,CAAC;MAAEO;IAAO,CAAC,EAAEN,QAAQ,EAAE;MAEzC,MAAMS,QAAQ,GAAG,MAAMF,KAAK,CAAC,6BAA6B,EAAE;QAC1DI,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACf,QAAQ;MAC/B,CAAC,CAAC;MAEF,IAAI,CAACS,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MAEA,MAAMnB,IAAI,GAAG,MAAMW,QAAQ,CAACC,IAAI,CAAC,CAAC;MAClCJ,MAAM,CAAC,gBAAgB,EAAER,IAAI,CAAC;IAEhC,CAAC;IAEDoB,SAASA,CAAC;MAAEZ;IAAO,CAAC,EAAE;MACpB;MACAC,KAAK,CAAC,6BAA6B,CAAC,CAAC;MAAA,CAClCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEL,GAAG,IAAK;QACbG,MAAM,CAAC,mBAAmB,EAAEH,GAAG,CAAC;MAClC,CAAC,CAAC;IACN,CAAC;IAED;IACAgB,UAAUA,CAACC,OAAO,EAAEC,SAAS,EAAE;MAE7B,QAAQA,SAAS;QACf,KAAK,gBAAgB;UACnBD,OAAO,CAACd,MAAM,CAAC,oBAAoB,EAAE,gBAAgB,CAAC;UACtD;QACF,KAAK,mBAAmB;UACtBc,OAAO,CAACd,MAAM,CAAC,oBAAoB,EAAE,mBAAmB,CAAC;UACzD;QACF;UACEgB,OAAO,CAACC,KAAK,CAAC,mBAAmB,CAAC;MACtC;IACF;EACF,CAAC;EAEDC,OAAO,EAAE,CACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}