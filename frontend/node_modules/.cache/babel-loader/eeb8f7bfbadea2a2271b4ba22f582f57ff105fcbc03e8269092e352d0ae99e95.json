{"ast":null,"code":"import { mapState } from 'vuex';\nexport default {\n  name: \"RegisterGroup\",\n  components: {},\n  data() {\n    return {\n      newGroup: {\n        level: null,\n        group: null,\n        instructor: null,\n        subject: null,\n        dateGroup: null,\n        timeGroup: null,\n        mondayGroup: []\n      }\n    };\n  },\n  computed: {\n    ...mapState({\n      level1: state => state.information.level_1,\n      level2: state => state.information.level_2,\n      instructors: state => state.information.instructors,\n      subject1: state => state.information.subject_1,\n      subject2: state => state.information.subject_2\n    }),\n    allLevels() {\n      return [...this.level1, ...this.level2];\n    },\n    validForm() {\n      return this.newGroup.level !== null && this.newGroup.group !== null && this.newGroup.instructor !== null && this.newGroup.subject !== null && this.newGroup.dateGroup !== null && this.newGroup.timeGroup !== null && this.newGroup.mondayGroup.length > 0;\n    }\n  },\n  methods: {\n    selectOptions(level) {\n      if (level === '1') {\n        return this.level1;\n      } else if (level === '2') {\n        return this.level2;\n      } else {\n        return [];\n      }\n    },\n    selectSubjects(level) {\n      if (level === 'level1') {\n        return this.subject1;\n      } else if (level === 'level2') {\n        return this.subject2;\n      } else {\n        return [];\n      }\n    },\n    addNewRegister() {\n      if (this.validForm) {\n        // Despache a ação Vuex para adicionar o cadastro\n        this.$store.dispatch('addGroupServer', this.newGroup).then(() => {\n          alert('Cadastro adicionado com sucesso.');\n          // Limpe o formulário após adicionar o cadastro\n          this.newGroup = {\n            level: null,\n            group: null,\n            instructor: null,\n            subject: null,\n            mondayGroup: []\n          };\n        }).catch(error => {\n          console.error('Erro ao adicionar cadastro:', error);\n        });\n      } else {\n        alert('Todos os campos devem ser prenchidos!');\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapState","name","components","data","newGroup","level","group","instructor","subject","dateGroup","timeGroup","mondayGroup","computed","level1","state","information","level_1","level2","level_2","instructors","subject1","subject_1","subject2","subject_2","allLevels","validForm","length","methods","selectOptions","selectSubjects","addNewRegister","$store","dispatch","then","alert","catch","error","console"],"sources":["/home/aureamar/Documentos/Projetos/project_lista_chamada/src/components/RegisterGroup.vue"],"sourcesContent":["<template>\n    <form class=\"layout_page\" action=\"\" autocomplete=\"off\" @submit.prevent=\"addNewRegister\">\n        <fieldset class=\"form_layout_items\">\n            <legend>Cadastro da Turma</legend>\n\n            <div class=\"itens\">\n                <div class=\"itens_1\">\n                    <label for=\"level\">Nível: </label>\n                    <select name=\"level\" id=\"level\" v-model=\"newGroup.level\">\n                        <option value=\"\">Selecione uma opção...</option>\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                    </select>\n                </div>\n\n\n                <div class=\"itens_1\">\n                    <label for=\"group\">Nome da Turma: </label>\n                    <select name=\"group\" id=\"group\" v-model=\"newGroup.group\">\n                        <option value=\"\">Selecione uma opção...</option>\n                        <option v-for=\"(level, index) in selectOptions(newGroup.level)\" :key=\"index\" :value=\"level.name\">\n                            {{ level.name }}\n                        </option>\n                    </select>\n                </div>\n\n            </div>\n\n            <div class=\"itens\">\n\n                <div class=\"itens_1\">\n                    <label for=\"instructor\">Nome do instrutor: </label>\n                    <select name=\"instructor\" id=\"instructor\" v-model=\"newGroup.instructor\">\n                        <option value=\"\">Selecione uma opção...</option>\n                        <option v-for=\"(instructor, index) in instructors\" :key=\"index\">\n                            {{\n                                instructor.name }}</option>\n                    </select>\n                </div>\n\n                <div class=\"itens_1\">\n                    <label for=\"subject\">Matéria: </label>\n                    <select name=\"subject\" id=\"subject\" v-model=\"newGroup.subject\">\n                        <option value=\"\">Selecione uma opção...</option>\n                        <option v-for=\"(subject, index) in selectSubjects(newGroup.level)\" :key=\"index\"\n                            :value=\"subject.name\">\n                            {{ subject.name }}\n                        </option>\n                    </select>\n                    {{ subject1 }}\n                </div>\n            </div>\n\n            <div class=\"itens\">\n                <div class=\"itens_1\">\n                    <label for=\"date\">Ínicio da turma: </label>\n                    <input class=\"itens_input\" type=\"date\" id=\"date\" v-model=\"newGroup.dateGroup\">\n\n                </div>\n\n                <div class=\"itens_1\">\n                    <label for=\"time\">Horário da Aula: </label>\n                    <input class=\"itens_input\" type=\"time\" id=\"time\" v-model=\"newGroup.timeGroup\" placeholder=\"00:00\">\n                </div>\n            </div>\n\n            <div class=\"itens\">\n                <div>\n                    <label for=\"date\">Dia da semana da aula: </label>\n                </div>\n\n                <div class=\"itens_check\">\n                    <div class=\"itens_checkbox\">\n                        <input type=\"checkbox\" id=\"monday\" v-model=\"newGroup.mondayGroup\" value=\"monday\">\n                        <label for=\"monday\">Segunda-feira</label>\n                    </div>\n\n                    <div class=\"itens_checkbox\">\n                        <input type=\"checkbox\" id=\"tuesday\" v-model=\"newGroup.mondayGroup\" value=\"tuesday\">\n                        <label for=\"tuesday\">Terça-feira</label>\n                    </div>\n\n                    <div class=\"itens_checkbox\">\n                        <input type=\"checkbox\" id=\"wednesday\" v-model=\"newGroup.mondayGroup\" value=\"wednesday\">\n                        <label for=\"wednesday\">Quarta-feira</label>\n                    </div>\n\n                    <div class=\"itens_checkbox\">\n                        <input type=\"checkbox\" id=\"thursday\" v-model=\"newGroup.mondayGroup\" value=\"thursday\">\n                        <label for=\"thursday\">Quinta-feira</label>\n                    </div>\n\n                    <div class=\"itens_checkbox\">\n                        <input type=\"checkbox\" id=\"friday\" v-model=\"newGroup.mondayGroup\" value=\"friday\">\n                        <label for=\"friday\">Sexta-feira</label>\n                    </div>\n\n                    <div class=\"itens_checkbox\">\n                        <input type=\"checkbox\" id=\"saturday\" v-model=\"newGroup.mondayGroup\" value=\"saturday\">\n                        <label for=\"saturday\">Sábado</label>\n                    </div>\n\n                    <div class=\"itens_checkbox\">\n                        <input type=\"checkbox\" id=\"sunday\" v-model=\"newGroup.mondayGroup\" value=\"sunday\">\n                        <label for=\"sunday\">Domingo</label>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"alignBtn\">\n                <button type=\"submit\" class=\"btn size\">Cadastrar</button>\n\n            </div>\n        </fieldset>\n    </form>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\n\nexport default {\n    name: \"RegisterGroup\",\n    components: {\n\n    },\n    data() {\n        return {\n            newGroup: {\n                level: null,\n                group: null,\n                instructor: null,\n                subject: null,\n                dateGroup: null,\n                timeGroup: null,\n                mondayGroup: [],\n            }\n\n\n        }\n\n    },\n    computed: {\n        ...mapState({\n            level1: state => state.information.level_1,\n            level2: state => state.information.level_2,\n            instructors: state => state.information.instructors,\n            subject1: state => state.information.subject_1,\n            subject2: state => state.information.subject_2,\n        }),\n        allLevels() {\n            return [...this.level1, ...this.level2]\n        },\n\n        validForm() {\n            return (\n                this.newGroup.level !== null &&\n                this.newGroup.group !== null &&\n                this.newGroup.instructor !== null &&\n                this.newGroup.subject !== null &&\n                this.newGroup.dateGroup !== null &&\n                this.newGroup.timeGroup !== null &&\n                this.newGroup.mondayGroup.length > 0\n            )\n        },\n\n    },\n\n    methods: {\n        selectOptions(level) {\n            if (level === '1') {\n                return this.level1;\n            } else if (level === '2') {\n                return this.level2;\n            } else {\n                return [];\n            }\n        },\n        selectSubjects(level) {\n            if (level === 'level1') {\n                return this.subject1;\n            } else if (level === 'level2') {\n                return this.subject2;\n            } else {\n                return [];\n            }\n        },\n\n        addNewRegister() {\n            if (this.validForm) {\n\n                // Despache a ação Vuex para adicionar o cadastro\n                this.$store.dispatch('addGroupServer', this.newGroup)\n                    .then(() => {\n                        alert('Cadastro adicionado com sucesso.');\n                        // Limpe o formulário após adicionar o cadastro\n                        this.newGroup = {\n                            level: null,\n                            group: null,\n                            instructor: null,\n                            subject: null,\n                            mondayGroup: [],\n                        };\n                    })\n                    .catch(error => {\n                        console.error('Erro ao adicionar cadastro:', error);\n                    });\n            } else {\n                alert('Todos os campos devem ser prenchidos!')\n\n            }\n        }\n    },\n\n\n\n}\n</script>\n\n\n<style scoped lang=\"scss\">\n@import '../variables';\n</style>"],"mappings":"AAsHA,SAASA,QAAO,QAAS,MAAM;AAE/B,eAAe;EACXC,IAAI,EAAE,eAAe;EACrBC,UAAU,EAAE,CAEZ,CAAC;EACDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,QAAQ,EAAE;QACNC,KAAK,EAAE,IAAI;QACXC,KAAK,EAAE,IAAI;QACXC,UAAU,EAAE,IAAI;QAChBC,OAAO,EAAE,IAAI;QACbC,SAAS,EAAE,IAAI;QACfC,SAAS,EAAE,IAAI;QACfC,WAAW,EAAE;MACjB;IAGJ;EAEJ,CAAC;EACDC,QAAQ,EAAE;IACN,GAAGZ,QAAQ,CAAC;MACRa,MAAM,EAAEC,KAAI,IAAKA,KAAK,CAACC,WAAW,CAACC,OAAO;MAC1CC,MAAM,EAAEH,KAAI,IAAKA,KAAK,CAACC,WAAW,CAACG,OAAO;MAC1CC,WAAW,EAAEL,KAAI,IAAKA,KAAK,CAACC,WAAW,CAACI,WAAW;MACnDC,QAAQ,EAAEN,KAAI,IAAKA,KAAK,CAACC,WAAW,CAACM,SAAS;MAC9CC,QAAQ,EAAER,KAAI,IAAKA,KAAK,CAACC,WAAW,CAACQ;IACzC,CAAC,CAAC;IACFC,SAASA,CAAA,EAAG;MACR,OAAO,CAAC,GAAG,IAAI,CAACX,MAAM,EAAE,GAAG,IAAI,CAACI,MAAM;IAC1C,CAAC;IAEDQ,SAASA,CAAA,EAAG;MACR,OACI,IAAI,CAACrB,QAAQ,CAACC,KAAI,KAAM,IAAG,IAC3B,IAAI,CAACD,QAAQ,CAACE,KAAI,KAAM,IAAG,IAC3B,IAAI,CAACF,QAAQ,CAACG,UAAS,KAAM,IAAG,IAChC,IAAI,CAACH,QAAQ,CAACI,OAAM,KAAM,IAAG,IAC7B,IAAI,CAACJ,QAAQ,CAACK,SAAQ,KAAM,IAAG,IAC/B,IAAI,CAACL,QAAQ,CAACM,SAAQ,KAAM,IAAG,IAC/B,IAAI,CAACN,QAAQ,CAACO,WAAW,CAACe,MAAK,GAAI;IAE3C;EAEJ,CAAC;EAEDC,OAAO,EAAE;IACLC,aAAaA,CAACvB,KAAK,EAAE;MACjB,IAAIA,KAAI,KAAM,GAAG,EAAE;QACf,OAAO,IAAI,CAACQ,MAAM;MACtB,OAAO,IAAIR,KAAI,KAAM,GAAG,EAAE;QACtB,OAAO,IAAI,CAACY,MAAM;MACtB,OAAO;QACH,OAAO,EAAE;MACb;IACJ,CAAC;IACDY,cAAcA,CAACxB,KAAK,EAAE;MAClB,IAAIA,KAAI,KAAM,QAAQ,EAAE;QACpB,OAAO,IAAI,CAACe,QAAQ;MACxB,OAAO,IAAIf,KAAI,KAAM,QAAQ,EAAE;QAC3B,OAAO,IAAI,CAACiB,QAAQ;MACxB,OAAO;QACH,OAAO,EAAE;MACb;IACJ,CAAC;IAEDQ,cAAcA,CAAA,EAAG;MACb,IAAI,IAAI,CAACL,SAAS,EAAE;QAEhB;QACA,IAAI,CAACM,MAAM,CAACC,QAAQ,CAAC,gBAAgB,EAAE,IAAI,CAAC5B,QAAQ,EAC/C6B,IAAI,CAAC,MAAM;UACRC,KAAK,CAAC,kCAAkC,CAAC;UACzC;UACA,IAAI,CAAC9B,QAAO,GAAI;YACZC,KAAK,EAAE,IAAI;YACXC,KAAK,EAAE,IAAI;YACXC,UAAU,EAAE,IAAI;YAChBC,OAAO,EAAE,IAAI;YACbG,WAAW,EAAE;UACjB,CAAC;QACL,CAAC,EACAwB,KAAK,CAACC,KAAI,IAAK;UACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACvD,CAAC,CAAC;MACV,OAAO;QACHF,KAAK,CAAC,uCAAuC;MAEjD;IACJ;EACJ;AAIJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}