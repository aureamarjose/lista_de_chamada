{"ast":null,"code":"import { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    information: [],\n    group: []\n  },\n  getters: {},\n  mutations: {\n    set_information(state, data) {\n      state.information = data;\n    }\n  },\n  actions: {\n    classData({\n      commit\n    }) {\n      // Realize a chamada à API JSON Server para buscar as opções\n      fetch('http://localhost:3000/registerGroup') // Substitua pela rota correta do JSON Server\n      .then(response => response.json()).then(data => {\n        commit('set_information', data);\n      });\n    },\n    addGroupServer({\n      state\n    }) {\n      const data = {\n        group: state.group\n      };\n      fetch('http://localhost:3000/group', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n    },\n    getters: {\n      getOptions: state => state.group\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","state","information","group","getters","mutations","set_information","data","actions","classData","commit","fetch","then","response","json","addGroupServer","method","headers","body","JSON","stringify","getOptions","modules"],"sources":["/home/aureamar/Documentos/Projetos/project_lista_chamada/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n    information: [],\n    group: [],\n  },\n  getters: {\n  },\n  mutations: {\n\n    set_information(state, data) {\n      state.information = data;\n\n    },\n  },\n  actions: {\n    classData({ commit }) {\n      // Realize a chamada à API JSON Server para buscar as opções\n      fetch('http://localhost:3000/registerGroup') // Substitua pela rota correta do JSON Server\n        .then((response) => response.json())\n        .then((data) => {\n          commit('set_information', data)\n        })\n    },\n    addGroupServer({ state }) {\n      const data = {\n        group: state.group,\n\n      }\n      fetch('http://localhost:3000/group', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      })\n    },\n    getters: {\n      getOptions: (state) => state.group,\n    },\n\n  },\n  modules: {\n  }\n})\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,WAAW,EAAE,EAAE;IACfC,KAAK,EAAE;EACT,CAAC;EACDC,OAAO,EAAE,CACT,CAAC;EACDC,SAAS,EAAE;IAETC,eAAeA,CAACL,KAAK,EAAEM,IAAI,EAAE;MAC3BN,KAAK,CAACC,WAAW,GAAGK,IAAI;IAE1B;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAAC;MAAEC;IAAO,CAAC,EAAE;MACpB;MACAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;MAAA,CAC1CC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEL,IAAI,IAAK;QACdG,MAAM,CAAC,iBAAiB,EAAEH,IAAI,CAAC;MACjC,CAAC,CAAC;IACN,CAAC;IACDQ,cAAcA,CAAC;MAAEd;IAAM,CAAC,EAAE;MACxB,MAAMM,IAAI,GAAG;QACXJ,KAAK,EAAEF,KAAK,CAACE;MAEf,CAAC;MACDQ,KAAK,CAAC,6BAA6B,EAAE;QACnCK,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,IAAI;MAC3B,CAAC,CAAC;IACJ,CAAC;IACDH,OAAO,EAAE;MACPiB,UAAU,EAAGpB,KAAK,IAAKA,KAAK,CAACE;IAC/B;EAEF,CAAC;EACDmB,OAAO,EAAE,CACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}