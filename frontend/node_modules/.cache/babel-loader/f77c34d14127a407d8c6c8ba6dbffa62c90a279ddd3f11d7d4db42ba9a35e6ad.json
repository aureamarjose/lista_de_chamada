{"ast":null,"code":"import { mapState } from 'vuex';\n\n//import MenuRegister from '@/components/MenuRegister.vue';\n\nimport RegisterGroup from '@/components/RegisterGroup.vue';\n//import CpTeste2 from '@/components/CpTeste2.vue';\nimport GroupPage from '@/components/GroupPage.vue';\nexport default {\n  name: 'componentVisible',\n  components: {\n    // RegisterGroup,\n    //  GroupPage\n  },\n  data() {\n    return {\n      componentVisible: null\n    };\n  },\n  computed: {\n    ...mapState({\n      cp: state => state.currentComponent\n    })\n  },\n  methods: {\n    showLayout(nameComponent) {\n      this.$store.dispatch('showLayout', nameComponent);\n    },\n    visibleComponent() {\n      const componentsMaps = {\n        'RegisterGroup': RegisterGroup,\n        'GroupPage': GroupPage\n      };\n      if (this.cp in componentsMaps) {\n        this.componentVisible = componentsMaps[this.cp];\n      } else {\n        console.error('Componente não encontrado para:', this.cp);\n      }\n    }\n  },\n  created() {\n    // Chame as ações para buscar as opções para os selects\n    this.$store.dispatch('classData');\n    this.$store.dispatch('showLayout');\n  }\n};","map":{"version":3,"names":["mapState","RegisterGroup","GroupPage","name","components","data","componentVisible","computed","cp","state","currentComponent","methods","showLayout","nameComponent","$store","dispatch","visibleComponent","componentsMaps","console","error","created"],"sources":["/home/aureamar/Documentos/Projetos/project_lista_chamada/src/views/RegistrationPage.vue"],"sourcesContent":["<template>\n    <div class=\"layout\">\n\n        <div class=\"menu_btn\">\n            <details class=\"btn_details\">\n                <summary>Turmas</summary>\n                <!-- <button class=\"btn\" @click=\"showLayout('componentGroup')\"> Turmas</button>\n                <button class=\"btn\" @click=\"showLayout('componentNewGroup') \">Nova Turma</button> -->\n\n                <!-- <button class=\"btn\" @click=\"() => { showLayout('componentGroup'); visibleComponent() }\"> Turmas</button>\n                <button class=\"btn\" @click=\"() => { showLayout('componentNewGroup'); visibleComponent() }\">Nova\n                    Turma</button> -->\n                <router-link class=\"btn\" :to=\"{ name: 'RegisterGroup' }\">Nova Turma</router-link>\n\n                <router-link class=\"btn\" :to=\"{ name: 'GroupPage' }\">Nova Turma</router-link>\n\n\n            </details>\n\n            <details class=\"btn_details\">\n                <summary>Aluno</summary>\n                <button class=\"btn\" @click=\"showLayout('b')\">Alunos</button>\n            </details>\n\n        </div>\n\n        <div class=\"view\">\n            <!-- <component :is=\"componentVisible\" /> -->\n            <RouterView />\n        </div>\n\n    </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\n\n//import MenuRegister from '@/components/MenuRegister.vue';\n\nimport RegisterGroup from '@/components/RegisterGroup.vue';\n//import CpTeste2 from '@/components/CpTeste2.vue';\nimport GroupPage from '@/components/GroupPage.vue';\n\nexport default {\n\n    name: 'componentVisible',\n    components: {\n        // RegisterGroup,\n        //  GroupPage\n    },\n\n    data() {\n        return {\n            componentVisible: null,\n\n        }\n    },\n\n    computed: {\n        ...mapState({\n            cp: state => state.currentComponent\n        })\n    },\n\n    methods: {\n        showLayout(nameComponent) {\n            this.$store.dispatch('showLayout', nameComponent);\n        },\n\n        visibleComponent() {\n\n            const componentsMaps = {\n                'RegisterGroup': RegisterGroup,\n                'GroupPage': GroupPage,\n            };\n            if (this.cp in componentsMaps) {\n                this.componentVisible = componentsMaps[this.cp];\n            } else {\n                console.error('Componente não encontrado para:', this.cp);\n            }\n        },\n\n    },\n    created() {\n        // Chame as ações para buscar as opções para os selects\n        this.$store.dispatch('classData');\n        this.$store.dispatch('showLayout');\n    },\n\n}\n</script>\n\n<style scoped lang=\"scss\"></style>"],"mappings":"AAmCA,SAASA,QAAO,QAAS,MAAM;;AAE/B;;AAEA,OAAOC,aAAY,MAAO,gCAAgC;AAC1D;AACA,OAAOC,SAAQ,MAAO,4BAA4B;AAElD,eAAe;EAEXC,IAAI,EAAE,kBAAkB;EACxBC,UAAU,EAAE;IACR;IACA;EAAA,CACH;EAEDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,gBAAgB,EAAE;IAEtB;EACJ,CAAC;EAEDC,QAAQ,EAAE;IACN,GAAGP,QAAQ,CAAC;MACRQ,EAAE,EAAEC,KAAI,IAAKA,KAAK,CAACC;IACvB,CAAC;EACL,CAAC;EAEDC,OAAO,EAAE;IACLC,UAAUA,CAACC,aAAa,EAAE;MACtB,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,YAAY,EAAEF,aAAa,CAAC;IACrD,CAAC;IAEDG,gBAAgBA,CAAA,EAAG;MAEf,MAAMC,cAAa,GAAI;QACnB,eAAe,EAAEhB,aAAa;QAC9B,WAAW,EAAEC;MACjB,CAAC;MACD,IAAI,IAAI,CAACM,EAAC,IAAKS,cAAc,EAAE;QAC3B,IAAI,CAACX,gBAAe,GAAIW,cAAc,CAAC,IAAI,CAACT,EAAE,CAAC;MACnD,OAAO;QACHU,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAE,IAAI,CAACX,EAAE,CAAC;MAC7D;IACJ;EAEJ,CAAC;EACDY,OAAOA,CAAA,EAAG;IACN;IACA,IAAI,CAACN,MAAM,CAACC,QAAQ,CAAC,WAAW,CAAC;IACjC,IAAI,CAACD,MAAM,CAACC,QAAQ,CAAC,YAAY,CAAC;EACtC;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}